@using AccountingManagement.Application.Abstractions
@using AccountingManagement.UI.Maui.Authentication
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@inject CustomAuthenticationStateProvider AuthStateProviderService
@inject ICurrentUserService CurrentUserService
@inject Toolbelt.Blazor.I18nText.I18nText I18nTextService

<div class="flex h-screen bg-background">
    <CascadingAuthenticationState>
        <AuthorizeView>
            <NotAuthorized>
                @{
                    var currentUri = NavManager.Uri;
                    if (!currentUri.EndsWith("/login", StringComparison.OrdinalIgnoreCase))
                    {
                        Task.Run(() => NavManager.NavigateTo("/login", replace: true));
                    }
                }
                <div class="flex-1 overflow-y-auto">
                    @Body
                </div>
            </NotAuthorized>
            <Authorized>
                <div class="w-64 bg-sidebar-bg text-sidebar-text flex flex-col fixed inset-y-0 left-0 z-30 border-r border-border-color">
                    <NavMenu />
                </div>
                <main class="flex-1 flex flex-col ml-64">
                    <div class="bg-surface shadow-sm p-3 border-b border-border-color flex justify-between items-center">
                        <span class="text-lg font-semibold text-text-primary">@Strings.ApplicationTitle</span>
                        <div class="flex items-center space-x-3">
                            <span class="text-sm text-text-secondary">@CurrentUserService.Username</span>
                            <button class="btn btn-secondary btn-sm" @onclick="HandleLogout">
                                @Strings.LogoutButton
                            </button>
                        </div>
                    </div>
                    <article class="flex-1 overflow-y-auto p-6">
                        @Body
                    </article>
                </main>
            </Authorized>
        </AuthorizeView>
    </CascadingAuthenticationState>
</div>

@code {
    private AppStrings Strings = new();

    protected override async Task OnInitializedAsync()
    {
        Strings = await I18nTextService.GetTextTableAsync<AppStrings>(this);
        await base.OnInitializedAsync();
    }

    private void HandleLogout()
    {
        AuthStateProviderService.NotifyUserLogout();
        NavManager.NavigateTo("/login", forceLoad: true);
    }
}