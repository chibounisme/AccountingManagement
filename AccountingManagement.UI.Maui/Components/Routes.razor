@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Authorization
@using AccountingManagement.UI.Maui.Components.Layout 
@inject Toolbelt.Blazor.I18nText.I18nText I18nTextService

<Router AppAssembly="@typeof(MauiProgram).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <NotAuthorized>
                @if (context.User.Identity?.IsAuthenticated == false)
                {
                    <RedirectToLogin /> 
                }
                else
                {
                    <div class="p-4">
                        <p role="alert" class="text-red-600">@Strings.NotAuthorizedMessage</p>
                    </div>
                }
            </NotAuthorized>
            <Authorizing>
                <div class="p-4">
                    <p>@Strings.AuthorizingMessage</p>
                </div>
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>@Strings.NotFoundTitle</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <div class="p-4">
                <p role="alert" class="text-lg">@Strings.NotFoundMessage</p>
            </div>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private AppStrings Strings = new();

    protected override async Task OnInitializedAsync()
    {
        Strings = await I18nTextService.GetTextTableAsync<AppStrings>(this);
        await base.OnInitializedAsync();
    }
}